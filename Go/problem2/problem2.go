/*
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

package main

import "fmt"

func fibRecursion(x int) int {
	if x == 1 {
		return 1
	} else if x == 2 {
		return 1
	}
	return fibRecursion(x-1) + fibRecursion(x-2)
}

func main() {
	answer := 0
	for i := 1; ; i++ {
		if fib := fibRecursion(i); fib < 4000000 && fib%2 == 0 {
			answer += fib
		} else if fib > 4000000 {
			break
		}
	}
	fmt.Println(answer)
}
